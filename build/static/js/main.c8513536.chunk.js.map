{"version":3,"sources":["components/Icon.js","components/TodoItem.js","components/TodoList.js","components/TodoInput.js","components/TodoControls.js","stitch/app.js","stitch/authentication.js","components/StitchAuth.js","stitch/mongodb.js","components/useTodoItems.js","components/TodoApp.js","components/Login.js","components/App.js","index.js"],"names":["CheckedIcon","props","xmlns","fill","viewBox","height","width","d","UncheckedIcon","TodoItem","item","toggleStatus","Checkbox","checked","Card","fluid","className","onClick","Content","task","TodoList","items","hasHadTodos","actions","List","length","map","key","_id","toString","toggleTodoStatus","NoTodoItems","Container","textAlign","role","aria-label","TodoInput","addTodo","inputProps","Input","style","type","placeholder","action","ActionButton","Text","styled","div","Button","color","disabled","children","TodoControls","useState","inputText","setInputText","hasCheckedItems","filter","x","handleAddTodo","allTodosAreCompleted","every","value","onChange","e","target","onKeyDown","floated","completeAllTodos","selected","clearCompletedTodos","APP_ID","app","Stitch","hasAppClient","getAppClient","initializeAppClient","loginAnonymous","credential","AnonymousCredential","auth","loginWithCredential","loginGoogle","a","loginWithRedirect","GoogleRedirectCredential","getCurrentUser","isLoggedIn","user","logoutCurrentUser","logoutUserWithId","id","StitchAuthContext","React","createContext","useStitchAuth","context","useContext","Error","StitchAuthProvider","currentUser","authState","setAuthState","useEffect","listener","authListener","onUserLoggedIn","loggedInUser","onUserLoggedOut","loggedOutUser","addAuthListener","hasRedirectResult","handleRedirectResult","handleOAuthRedirects","state","removeAuthListener","removeAuthenticationListener","handleLogin","provider","handleLogout","console","log","authInfo","useMemo","Provider","getServiceClient","RemoteMongoClient","factory","db","collection","todoReducer","payload","todos","newTodo","todo","status","error","TodoApp","userId","useReducer","dispatch","loadTodos","find","limit","asArray","owner_id","insertOne","result","insertedId","removeTodo","todoId","deleteOne","clearTodos","deleteMany","setTodoCompletionStatus","updateOne","$set","returnNewDocument","updateMany","t","currentStatus","useTodoItems","Header","as","margin","Login","App","AppUI","inverted","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c8513536.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CheckedIcon = (props) => (\r\n\t<svg\r\n\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\tfill='#000000'\r\n\t\tviewBox='0 0 24 24'\r\n\t\theight='24'\r\n\t\twidth='24'\r\n\t\t{...props}>\r\n\t\t<path d='M0 0h24v24H0z' fill='none' />\r\n\t\t<path d='M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' />\r\n\t</svg>\r\n);\r\nexport const UncheckedIcon = (props) => (\r\n\t<svg\r\n\t\tfill='#000000'\r\n\t\tviewBox='0 0 24 24'\r\n\t\theight='24'\r\n\t\twidth='24'\r\n\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t{...props}>\r\n\t\t<path d='M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z' />\r\n\t\t<path d='M0 0h24v24H0z' fill='none' />\r\n\t</svg>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CheckedIcon, UncheckedIcon } from './Icon';\r\nimport { Card, Header } from 'semantic-ui-react';\r\n\r\nTodoItem.propTypes = {\r\n\titem: PropTypes.object,\r\n\tremove: PropTypes.func,\r\n\tsetStatus: PropTypes.func,\r\n\ttoggleStatus: PropTypes.func,\r\n};\r\nexport default function TodoItem(props) {\r\n\tconst { item, toggleStatus } = props;\r\n\tconst Checkbox = item.checked ? CheckedIcon : UncheckedIcon;\r\n\treturn (\r\n\t\t<Card fluid className='todo-layout' onClick={toggleStatus}>\r\n\t\t\t<Card.Content className='todo-data'>\r\n\t\t\t\t<Checkbox />\r\n\t\t\t\t<p className='todo-text'>{item.task}</p>\r\n\t\t\t</Card.Content>\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from 'react-error-boundary';\r\nimport TodoItem from './TodoItem';\r\nimport { Container, List } from 'semantic-ui-react';\r\n\r\nTodoList.propTypes = {\r\n\titems: PropTypes.array,\r\n\tactions: PropTypes.object,\r\n};\r\nexport default function TodoList(props) {\r\n\tconst { items, hasHadTodos, actions } = props;\r\n\r\n\treturn (\r\n\t\t<ErrorBoundary>\r\n\t\t\t<List>\r\n\t\t\t\t{items.length === 0 && <NoTodoItems hasHadTodos={hasHadTodos} />}\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\tkey={item._id.toString()}\r\n\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\ttoggleStatus={() => actions.toggleTodoStatus(item._id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</ErrorBoundary>\r\n\t);\r\n}\r\nconst NoTodoItems = (props) => {\r\n\treturn (\r\n\t\t<Container textAlign='center' fluid className='todo-container'>\r\n\t\t\t{props.hasHadTodos ? (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<span role='img' aria-label='celebrate'>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t🎉{' '}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tAll done! Enjoy your day!\r\n\t\t\t\t</span>\r\n\t\t\t) : (\r\n\t\t\t\t<span>\r\n\t\t\t\t\tEnter some text and click <strong>Add</strong> to save your first\r\n\t\t\t\t\tto-do task\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport { Input, Container, Button } from 'semantic-ui-react';\r\n\r\nTodoInput.propTypes = {\r\n\taddTodo: PropTypes.func,\r\n};\r\nexport default function TodoInput(props) {\r\n\tconst { addTodo, ...inputProps } = props;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Input\r\n\t\t\t\tstyle={{ width: '75%', 'margin-bottom': '20px' }}\r\n\t\t\t\t{...inputProps}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='What Do You Need To Do?'\r\n\t\t\t/>\r\n\t\t\t<ActionButton action={props.addTodo}>Add To-Do</ActionButton>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst ActionButton = (props) => {\r\n\tconst Text = styled.div`\r\n\t\tmargin-right: 8px;\r\n\t\tmargin-left: 8px;\r\n\t`;\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tclassName='mainbtns'\r\n\t\t\tcolor='info'\r\n\t\t\tonClick={props.action}\r\n\t\t\tdisabled={props.disabled}>\r\n\t\t\t<Text>{props.children}</Text>\r\n\t\t</Button>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoInput from './TodoInput';\r\nimport { Container, Button } from 'semantic-ui-react';\r\n\r\nTodoControls.propTypes = {\r\n\titems: PropTypes.array,\r\n\tactions: PropTypes.object,\r\n};\r\nexport default function TodoControls(props) {\r\n\tconst { items, actions } = props;\r\n\tconst [inputText, setInputText] = useState('');\r\n\tconst hasCheckedItems = items && items.filter((x) => x.checked).length > 0;\r\n\tconst handleInput = (e) => setInputText(e.target.value);\r\n\tconst handleAddTodo = () => {\r\n\t\tif (inputText) {\r\n\t\t\tactions.addTodo(inputText);\r\n\t\t\tsetInputText('');\r\n\t\t}\r\n\t};\r\n\tconst handleKeyPress = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\thandleAddTodo();\r\n\t\t}\r\n\t};\r\n\tconst allTodosAreCompleted = items.every((item) => item.checked === true);\r\n\r\n\treturn (\r\n\t\t<Container fluid className='controls'>\r\n\t\t\t<TodoInput\r\n\t\t\t\tvalue={inputText}\r\n\t\t\t\taddTodo={handleAddTodo}\r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t/>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t{items.length > 0 && !allTodosAreCompleted && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName='selectbtn'\r\n\t\t\t\t\t\tfloated='left'\r\n\t\t\t\t\t\tonClick={actions.completeAllTodos}>\r\n\t\t\t\t\t\t{props.selected ? (\r\n\t\t\t\t\t\t\t<span>All Completed</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span>Complete All</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t{hasCheckedItems && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName='clearbtn'\r\n\t\t\t\t\t\tfloated='right'\r\n\t\t\t\t\t\tonClick={actions.clearCompletedTodos}>\r\n\t\t\t\t\t\tClear Completed\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import { Stitch } from 'mongodb-stitch-browser-sdk';\r\n\r\n// TODO: Add your Stitch app's App ID\r\nconst APP_ID = 'nodetodo-rxils';\r\n\r\n// TODO: Initialize the app client\r\nconst app = Stitch.hasAppClient(APP_ID)\r\n\t? Stitch.getAppClient(APP_ID)\r\n\t: Stitch.initializeAppClient(APP_ID);\r\n\r\nexport { app };\r\n","import {\r\n\tAnonymousCredential,\r\n\tGoogleRedirectCredential,\r\n} from 'mongodb-stitch-browser-sdk';\r\nimport { app } from './app.js';\r\n\r\nexport function loginAnonymous() {\r\n\t// Allow users to log in anonymously\r\n\tconst credential = new AnonymousCredential();\r\n\treturn app.auth.loginWithCredential(credential);\r\n}\r\n\r\nexport async function loginGoogle() {\r\n\treturn await app.auth.loginWithRedirect(new GoogleRedirectCredential());\r\n}\r\n\r\nexport function hasLoggedInUser() {\r\n\t// Check if there is currently a logged in user\r\n\treturn app.auth.isLoggedIn;\r\n}\r\n\r\nexport function handleOAuthRedirects() {\r\n\tif (app.auth.hasRedirectResult()) {\r\n\t\treturn app.auth.handleRedirectResult();\r\n\t}\r\n}\r\n\r\nexport function getCurrentUser() {\r\n\t// Return the user object of the currently logged in user\r\n\treturn app.auth.isLoggedIn ? app.auth.user : null;\r\n}\r\n\r\nexport function logoutCurrentUser() {\r\n\t// Logout the currently logged in user\r\n\tconst user = getCurrentUser();\r\n\treturn app.auth.logoutUserWithId(user.id);\r\n}\r\n\r\nexport function addAuthenticationListener(listener) {\r\n\tapp.auth.addAuthListener(listener);\r\n}\r\nexport function removeAuthenticationListener(listener) {\r\n\tapp.auth.removeAuthListener(listener);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\thasLoggedInUser,\r\n\tloginAnonymous,\r\n\tloginGoogle,\r\n\tlogoutCurrentUser,\r\n\tgetCurrentUser,\r\n\taddAuthenticationListener,\r\n\tremoveAuthenticationListener,\r\n\thandleOAuthRedirects,\r\n} from './../stitch/authentication';\r\n\r\n// Create a React Context that lets us expose and access auth state\r\n// without passing props through many levels of the component tree\r\nconst StitchAuthContext = React.createContext();\r\n\r\n// Create a React Hook that lets us get data from our auth context\r\nexport function useStitchAuth() {\r\n\tconst context = React.useContext(StitchAuthContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(`useStitchAuth must be used within a StitchAuthProvider`);\r\n\t}\r\n\treturn context;\r\n}\r\n\r\n// Create a component that controls auth state and exposes it via\r\n// the React Context we created.\r\nexport function StitchAuthProvider(props) {\r\n\tconst [authState, setAuthState] = React.useState({\r\n\t\tisLoggedIn: hasLoggedInUser(),\r\n\t\tcurrentUser: getCurrentUser(),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst authListener = {\r\n\t\t\tonUserLoggedIn: (auth, loggedInUser) => {\r\n\t\t\t\tif (loggedInUser) {\r\n\t\t\t\t\tsetAuthState((authState) => ({\r\n\t\t\t\t\t\t...authState,\r\n\t\t\t\t\t\tisLoggedIn: true,\r\n\t\t\t\t\t\tcurrentUser: loggedInUser,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonUserLoggedOut: (auth, loggedOutUser) => {\r\n\t\t\t\tsetAuthState((authState) => ({\r\n\t\t\t\t\t...authState,\r\n\t\t\t\t\tisLoggedIn: false,\r\n\t\t\t\t\tcurrentUser: null,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t};\r\n\t\taddAuthenticationListener(authListener);\r\n\t\thandleOAuthRedirects();\r\n\t\tsetAuthState((state) => ({ ...state }));\r\n\t\treturn () => {\r\n\t\t\tremoveAuthenticationListener(authListener);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// Authentication Actions\r\n\tconst handleLogin = async (provider) => {\r\n\t\tif (!authState.isLoggedIn) {\r\n\t\t\tswitch (provider) {\r\n\t\t\t\tcase 'anonymous':\r\n\t\t\t\t\treturn loginAnonymous();\r\n\t\t\t\tcase 'google':\r\n\t\t\t\t\treturn loginGoogle();\r\n\t\t\t\tdefault: {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tconst { isLoggedIn } = authState;\r\n\t\tif (isLoggedIn) {\r\n\t\t\tawait logoutCurrentUser();\r\n\t\t\tsetAuthState({\r\n\t\t\t\t...authState,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tcurrentUser: null,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(`can't handleLogout when no user is logged in`);\r\n\t\t}\r\n\t};\r\n\r\n\t// We useMemo to improve performance by eliminating some re-renders\r\n\tconst authInfo = React.useMemo(() => {\r\n\t\tconst { isLoggedIn, currentUser } = authState;\r\n\r\n\t\tconst value = {\r\n\t\t\tisLoggedIn,\r\n\t\t\tcurrentUser,\r\n\t\t\tactions: { handleLogin, handleLogout },\r\n\t\t};\r\n\t\treturn value;\r\n\t}, [authState.isLoggedIn]);\r\n\treturn (\r\n\t\t<StitchAuthContext.Provider value={authInfo}>\r\n\t\t\t{props.children}\r\n\t\t</StitchAuthContext.Provider>\r\n\t);\r\n}\r\n\r\nStitchAuthProvider.propTypes = {\r\n\tchildren: PropTypes.element,\r\n};\r\n","import { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { app } from \"./app\";\r\n\r\n// TODO: Initialize a MongoDB Service Client\r\nconst mongoClient = app.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n);\r\n\r\n// TODO: Instantiate a collection handle for todo.items\r\nconst items = mongoClient.db(\"todo\").collection(\"items\");\r\n\r\nexport { items };\r\n","import React from \"react\";\r\nimport { items } from \"../stitch\";\r\n\r\nconst todoReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"setTodos\": {\r\n      return {\r\n        ...state,\r\n        hasHadTodos: payload.todos.length > 0,\r\n        todos: payload.todos || [],\r\n      };\r\n    }\r\n    case \"addTodo\": {\r\n      const newTodo = {\r\n        ...payload,\r\n        checked: typeof payload.checked === \"boolean\" ? payload.checked : false,\r\n      };\r\n      return {\r\n        ...state,\r\n        hasHadTodos: true,\r\n        todos: [...state.todos, newTodo],\r\n      };\r\n    }\r\n    case \"removeTodo\": {\r\n      const removeSpecifiedTodo = todo => todo.id !== payload.id;\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(removeSpecifiedTodo),\r\n      };\r\n    }\r\n    case \"clearCompletedTodos\": {\r\n      const isNotCompleted = todo => todo.checked !== true;\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(isNotCompleted),\r\n      };\r\n    }\r\n    case \"clearTodos\": {\r\n      return { ...state, todos: [] };\r\n    }\r\n    case \"setTodoStatus\": {\r\n      const updateTodoStatus = todo => {\r\n        const isThisTodo = todo._id === payload.id;\r\n        return isThisTodo ? { ...todo, status: payload.status } : todo;\r\n      };\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(updateTodoStatus),\r\n      };\r\n    }\r\n    case \"completeAllTodos\": {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo => ({ ...todo, checked: true })),\r\n      };\r\n    }\r\n    case \"toggleTodoStatus\": {\r\n      const updateStatus = todo => {\r\n        const isThisTodo = todo._id === payload.id;\r\n        return isThisTodo ? { ...todo, checked: !todo.checked } : todo;\r\n      };\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(updateStatus),\r\n      };\r\n    }\r\n    default: {\r\n      console.error(`Received invalid todo action type: ${type}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport function useTodoItems(userId) {\r\n  //\r\n  const [state, dispatch] = React.useReducer(todoReducer, { todos: [] });\r\n  // Todo Actions\r\n  const loadTodos = async () => {\r\n    const todos = await items.find({}, { limit: 1000 }).asArray();\r\n    dispatch({ type: \"setTodos\", payload: { todos } });\r\n  };\r\n  const addTodo = async task => {\r\n    const todo = { task, owner_id: userId };\r\n    const result = await items.insertOne(todo);\r\n    dispatch({ type: \"addTodo\", payload: { ...todo, _id: result.insertedId } });\r\n  };\r\n  const removeTodo = async todoId => {\r\n    await items.deleteOne({ _id: todoId });\r\n    dispatch({ type: \"removeTodo\", payload: { id: todoId } });\r\n  };\r\n  const clearTodos = async () => {\r\n    await items.deleteMany({});\r\n    dispatch({ type: \"clearTodos\" });\r\n  };\r\n  const clearCompletedTodos = async () => {\r\n    await items.deleteMany({ checked: true });\r\n    dispatch({ type: \"clearCompletedTodos\" });\r\n  };\r\n  const setTodoCompletionStatus = async (todoId, status) => {\r\n    await items.updateOne(\r\n      { _id: todoId },\r\n      { $set: { checked: status } },\r\n      { returnNewDocument: true },\r\n    );\r\n    dispatch({ type: \"setTodoStatus\", payload: { todoId, status } });\r\n  };\r\n  const completeAllTodos = async () => {\r\n    await items.updateMany({ owner_id: userId }, { $set: { checked: true } });\r\n    dispatch({ type: \"completeAllTodos\" });\r\n  };\r\n  const toggleTodoStatus = async todoId => {\r\n    const todo = state.todos.find(t => t._id === todoId);\r\n    await items.updateOne(\r\n      { _id: todoId },\r\n      { $set: { checked: !todo.currentStatus } },\r\n    );\r\n    dispatch({ type: \"toggleTodoStatus\", payload: { id: todoId } });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadTodos();\r\n  }, []);\r\n  return {\r\n    items: state.todos,\r\n    hasHadTodos: state.hasHadTodos,\r\n    actions: {\r\n      addTodo,\r\n      removeTodo,\r\n      setTodoCompletionStatus,\r\n      clearTodos,\r\n      clearCompletedTodos,\r\n      completeAllTodos,\r\n      toggleTodoStatus,\r\n    },\r\n  };\r\n}\r\n","import React from 'react';\r\nimport ErrorBoundary from 'react-error-boundary';\r\nimport TodoList from './TodoList';\r\nimport TodoControls from './TodoControls';\r\nimport { useStitchAuth } from './StitchAuth';\r\nimport { useTodoItems } from './useTodoItems';\r\nimport '../style.css';\r\nimport { Container, Card } from 'semantic-ui-react';\r\n\r\nTodoApp.propTypes = {};\r\nexport default function TodoApp() {\r\n\tconst { currentUser } = useStitchAuth();\r\n\tconst todo = useTodoItems(currentUser.id);\r\n\r\n\treturn (\r\n\t\t<ErrorBoundary>\r\n\t\t\t<Container className='main-layout' style={{ 'padding-top': '30px' }}>\r\n\t\t\t\t<Card fluid>\r\n\t\t\t\t\t<Card.Header\r\n\t\t\t\t\t\tas='h1'\r\n\t\t\t\t\t\tstyle={{ margin: 'auto', 'padding-top': '15px' }}>\r\n\t\t\t\t\t\tYour To-Do List\r\n\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t<TodoControls {...todo} />\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<TodoList {...todo} />\r\n\t\t\t</Container>\r\n\t\t</ErrorBoundary>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ErrorBoundary from 'react-error-boundary';\r\nimport { useStitchAuth } from './StitchAuth';\r\nimport { Button, Card, Container } from 'semantic-ui-react';\r\n\r\nLogin.propTypes = {};\r\nexport default function Login() {\r\n\tconst { actions } = useStitchAuth();\r\n\treturn (\r\n\t\t<ErrorBoundary>\r\n\t\t\t<Container className='login-layout'>\r\n\t\t\t\t<Card fluid className='login-card'>\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tclassName='loginbtn'\r\n\t\t\t\t\t\t\tprovider='anonymous'\r\n\t\t\t\t\t\t\tonClick={() => actions.handleLogin('anonymous')}>\r\n\t\t\t\t\t\t\tLog In as Guest\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tclassName='loginbtn'\r\n\t\t\t\t\t\t\tprovider='google'\r\n\t\t\t\t\t\t\tonClick={() => actions.handleLogin('google')}>\r\n\t\t\t\t\t\t\tLog In with Google\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\t\t\t</Container>\r\n\t\t</ErrorBoundary>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport TodoApp from './TodoApp';\r\nimport Login from './Login';\r\nimport { StitchAuthProvider, useStitchAuth } from './StitchAuth';\r\nimport { Header, Button } from 'semantic-ui-react';\r\nimport '../style.css';\r\n\r\nApp.propTypes = {};\r\nexport default function App() {\r\n\treturn (\r\n\t\t<StitchAuthProvider>\r\n\t\t\t<AppUI />\r\n\t\t</StitchAuthProvider>\r\n\t);\r\n}\r\n\r\nAppUI.propTypes = {};\r\nfunction AppUI() {\r\n\tconst {\r\n\t\tisLoggedIn,\r\n\t\tactions: { handleLogout },\r\n\t} = useStitchAuth();\r\n\treturn (\r\n\t\t<div className='layout'>\r\n\t\t\t<div className='navbar'>\r\n\t\t\t\t<Header as='h1' className='title'>\r\n\t\t\t\t\tMystik Developed Node To-Do App\r\n\t\t\t\t</Header>\r\n\t\t\t\t{isLoggedIn && (\r\n\t\t\t\t\t<Button inverted onClick={handleLogout}>\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{isLoggedIn ? <TodoApp /> : <Login />}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}